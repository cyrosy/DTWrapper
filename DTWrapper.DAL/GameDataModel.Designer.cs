//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace DTWrapper.DAL
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class gamesEntities : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet gamesEntities à l'aide de la chaîne de connexion trouvée dans la section 'gamesEntities' du fichier de configuration d'application.
        /// </summary>
        public gamesEntities() : base("name=gamesEntities", "gamesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet gamesEntities.
        /// </summary>
        public gamesEntities(string connectionString) : base(connectionString, "gamesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet gamesEntities.
        /// </summary>
        public gamesEntities(EntityConnection connection) : base(connection, "gamesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;

        #endregion
        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Games. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }

        #endregion
    }
    

    #endregion
    
    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gamesModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Game.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        /// <param name="exe">Valeur initiale de la propriété Exe.</param>
        /// <param name="iso">Valeur initiale de la propriété Iso.</param>
        /// <param name="icon">Valeur initiale de la propriété Icon.</param>
        public static Game CreateGame(global::System.Int64 id, global::System.String name, global::System.String exe, global::System.String iso, global::System.String icon)
        {
            Game game = new Game();
            game.ID = id;
            game.Name = name;
            game.Exe = exe;
            game.Iso = iso;
            game.Icon = icon;
            return game;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Exe
        {
            get
            {
                return _Exe;
            }
            set
            {
                OnExeChanging(value);
                ReportPropertyChanging("Exe");
                _Exe = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Exe");
                OnExeChanged();
            }
        }
        private global::System.String _Exe;
        partial void OnExeChanging(global::System.String value);
        partial void OnExeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Iso
        {
            get
            {
                return _Iso;
            }
            set
            {
                OnIsoChanging(value);
                ReportPropertyChanging("Iso");
                _Iso = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Iso");
                OnIsoChanged();
            }
        }
        private global::System.String _Iso;
        partial void OnIsoChanging(global::System.String value);
        partial void OnIsoChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();

        #endregion
    
    }

    #endregion
    
}
